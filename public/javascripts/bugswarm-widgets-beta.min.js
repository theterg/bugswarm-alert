var SwarmFeedMap={Acceleration:{values:["x","y","z"],units:"G",min:-1.5,max:1.5},Location:{values:["latitude","longitude"],units:"°"},Temperature:{values:["TempF"],units:"°F",min:-10,max:110},Light:{values:["Value"],units:"Lux",min:0,max:1024},Potentiometer:{values:["Raw"],units:"",min:0,max:1024},Button:{values:["b1","b2","b3"],units:""},"Sound Level":{values:["Raw"],units:"dB"}};(function($,undefined){var namespace="bug.swarmChart";var my={};var options={swarm:false,resource:false,feed:false,feedVars:false,debug:true,value:0,width:450,height:250,plotlen:100,numaxes:1,chart:{series:{shadowSize:0},grid:{color:"#FFF"},legend:{backgroundColor:"#5C5D60"},yaxis:{position:"left"}}};var info=function(message){console.log("["+my.eventNamespace+"]: "+message)};var debug=function(message){if(options.debug)console.log("["+my.eventNamespace+"]: "+message)};var create=function(){my=this;debug("create");var el=my.element.hide();var opts=my.options;if(!my.options.swarm){info("ERR: must specify swarm creating widget")}if(opts.feed&&!opts.feedVars&&SwarmFeedMap[opts.feed]!==undefined){opts.feedVars=SwarmFeedMap[opts.feed].values;opts.numaxes=opts.feedVars.length;opts.chart.yaxis.max=SwarmFeedMap[opts.feed].max;opts.chart.yaxis.min=SwarmFeedMap[opts.feed].min}$(el).css("width",my.options.width).css("height",my.options.height);$(el).html("loading...");my.data=[];for(var i=0;i<opts.numaxes;i++){my.data.push([])}};var onSwarmMessage=function(message){var my=this;var payload=message.payload;if(my.options.resource&&message.from.resource!==my.options.resource){return}if(!("feed"in payload)){return}if(payload.name===my.options.feed){update.apply(my,[payload.feed])}};var init=function(){debug("init");my.element.html("");my.plot=$.plot(my.element,my.data,my.options.chart);my.options.swarm.addListener("message",onSwarmMessage,my);my.element.show();my.startTime=(new Date).getTime()};var destroy=function(){debug("destroy")};var update=function(data){debug("update "+JSON.stringify(data));if(this!==window){my=this}if(data!==undefined){my.options.value=data}var currentTime=(new Date).getTime();if(my.options.feedVars!==undefined){for(var i in my.options.feedVars){var value=my.options.feedVars[i];my.data[i].push([(currentTime-my.startTime)/1e3,data[value]]);if(my.data[i].length>my.options.plotlen){my.data[i].shift()}}}else{var j=0;for(var prop in data){if(my.data[j]===undefined){my.data[j]=[]}my.data[j].push([(currentTime-my.startTime)/1e3,prop]);if(my.data[j].length>my.options.plotlen){my.data[j].shift()}j++}}my.plot=$.plot(my.element,my.data,my.options.chart)};var optionChanged=function(name,value){debug(name+" changed to "+JSON.stringify(value));my.options[name]=value;update()};$.widget(namespace,{_create:create,_init:init,destroy:destroy,_setOption:optionChanged,options:options,update:update})})(jQuery);(function($,undefined){var namespace="bug.swarmMap";var my={};var options={swarm:false,resource:false,feed:false,feedVars:false,debug:true,value:0,width:450,height:250,mapLibSrc:"http://maps.googleapis.com/maps/api/js?sensor=false&callback=googlemapinit",startLat:40.72493,startLon:-73.996562,map:{zoom:16}};var info=function(message){console.log("["+my.eventNamespace+"]: "+message)};var debug=function(message){if(options.debug)console.log("["+my.eventNamespace+"]: "+message)};var create=function(){my=this;debug("create");var el=my.element;var opts=my.options;if(!my.options.swarm){info("ERR: must specify swarm creating widget")}if(opts.feed&&!opts.feedVars&&SwarmFeedMap[opts.feed]!==undefined){opts.feedVars=SwarmFeedMap[opts.feed].values}$(el).width(my.options.width).height(my.options.height);$(el).css("width",my.options.width).css("height",my.options.height);$(el).html("loading...");if(window.google===undefined){debug("Google maps library not found, loading...");var script=document.createElement("script");script.type="text/javascript";script.src=opts.mapLibSrc;document.body.appendChild(script)}};window.googlemapinit=function(){debug("...Google maps loaded, re-initializing widgets.");var widgets=$(":data(bug-swarmMap)");$(":data(bug-swarmMap)").each(function(index,value){$(value).swarmMap()})};var onSwarmMessage=function(message){var my=this;var payload=message.payload;if(my.options.resource&&message.from.resource!==my.options.resource){return}if(!("feed"in payload)){return}if(payload.name===my.options.feed){update.apply(my,[payload.feed])}};var init=function(){if(!(window.google!==undefined&&window.google.maps!==undefined)){debug("google libraries missing, not initializing");return}debug("init");my.element.html("");my.options.map.center=new google.maps.LatLng(my.options.startLat,my.options.startLon);my.options.map.mapTypeId=google.maps.MapTypeId.ROADMAP;my.map=new google.maps.Map(my.element.get(0),my.options.map);my.marker=new google.maps.Marker({position:my.options.map.center,map:my.map});my.options.swarm.addListener("message",onSwarmMessage,my)};var destroy=function(){debug("destroy")};var update=function(data){debug("update "+JSON.stringify(data));if(this!==window){my=this}if(data!==undefined){my.options.value=data}if(my.options.feedVars!==undefined&&my.options.feedVars.length>1){var latlng=new google.maps.LatLng(data[my.options.feedVars[0]],data[my.options.feedVars[1]]);my.marker.setPosition(latlng);my.map.setCenter(latlng)}};var optionChanged=function(name,value){debug(name+" changed to "+JSON.stringify(value));my.options[name]=value;update()};$.widget(namespace,{_create:create,_init:init,destroy:destroy,_setOption:optionChanged,options:options,update:update})})(jQuery);(function($,undefined){var namespace="bug.swarmField";var my={};var options={swarm:false,resource:false,printWholePayload:false,feed:false,feedVars:false,units:"",debug:true,value:0};var info=function(message){console.log("["+my.eventNamespace+"]: "+message)};var debug=function(message){if(options.debug)console.log("["+my.eventNamespace+"]: "+message)};var create=function(){my=this;debug("create");var el=my.element.hide();var opts=my.options;if(!my.options.swarm){info("ERR: must specify swarm creating widget")}if(opts.feed&&!opts.feedVars&&SwarmFeedMap[opts.feed]!==undefined){opts.feedVars=SwarmFeedMap[opts.feed].values;opts.units=SwarmFeedMap[opts.feed].units}my.element=el.append("<span id=data></span>").children(":first");el.show()};var onSwarmMessage=function(message){var my=this;var payload=message.payload;if(my.options.resource&&message.from.resource!==my.options.resource){return}if(my.options.printWholePayload){update(JSON.stringify(payload))}else{if(!("feed"in payload)){return}if(!my.options.feed){update.apply(my,[JSON.stringify(payload.feed)])}else if(payload.name===my.options.feed){if(!my.options.feedVars||my.options.feedVars.length>1){update.apply(my,[JSON.stringify(payload.feed)])}else{update.apply(my,[payload.feed[my.options.feedVars[0]]+" "+my.options.units])}}}};var init=function(){debug("init");update("Waiting for data...");my.options.swarm.addListener("message",onSwarmMessage,my)};var destroy=function(){debug("destroy")};var update=function(data){if(this!==window){my=this}debug("update: "+data);if(data!==undefined){my.options.value=data}my.element.html(data)};var optionChanged=function(name,value){debug(name+" changed to "+JSON.stringify(value));my.options[name]=value;update()};$.widget(namespace,{_create:create,_init:init,destroy:destroy,_setOption:optionChanged,options:options,update:update})})(jQuery);